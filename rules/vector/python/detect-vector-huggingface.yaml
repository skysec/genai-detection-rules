rules:
  - id: detect-vector-huggingface
    languages:
      - python
    severity: INFO
    message: "Detected HuggingFace vector/embedding usage: SentenceTransformers, Transformers embeddings, or HuggingFace vector search patterns"
    pattern-either:
      # Core SentenceTransformers imports - VERY HIGH CONFIDENCE
      - pattern: from sentence_transformers import SentenceTransformer
      - pattern: from sentence_transformers import SentenceTransformer, $REST
      - pattern: import sentence_transformers
      - pattern: from sentence_transformers import util
      - pattern: from sentence_transformers.util import semantic_search
      - pattern: from sentence_transformers.util import cos_sim

      # HuggingFace Transformers embedding patterns - HIGH CONFIDENCE
      - pattern: from transformers import AutoTokenizer, AutoModel
      - pattern: from transformers import AutoModel
      - pattern: AutoModel.from_pretrained($MODEL)
      - pattern: AutoTokenizer.from_pretrained($MODEL)

      # SentenceTransformer instantiation - VERY HIGH CONFIDENCE
      - pattern: SentenceTransformer($MODEL)
      - pattern: $MODEL = SentenceTransformer($MODEL_NAME)
      - pattern: model = SentenceTransformer(...)

      # Embedding generation - HIGH CONFIDENCE
      - pattern: $MODEL.encode($TEXTS)
      - pattern: $EMBEDDINGS = $MODEL.encode($TEXTS)
      - pattern: embeddings = model.encode(...)

      # HuggingFace specific vector operations - VERY HIGH CONFIDENCE
      - pattern: semantic_search($QUERY_EMB, $CORPUS_EMB)
      - pattern: util.semantic_search($QUERY_EMB, $CORPUS_EMB)
      - pattern: sentence_transformers.util.semantic_search($QUERY_EMB, $CORPUS_EMB)
      - pattern: cos_sim($EMB1, $EMB2)
      - pattern: util.cos_sim($EMB1, $EMB2)

      # Popular HuggingFace embedding models - HIGH CONFIDENCE
      - pattern: SentenceTransformer("all-MiniLM-L6-v2")
      - pattern: SentenceTransformer("all-mpnet-base-v2")
      - pattern: SentenceTransformer("multi-qa-MiniLM-L6-cos-v1")
      - pattern: SentenceTransformer("paraphrase-MiniLM-L6-v2")
      - pattern: SentenceTransformer("sentence-transformers/$MODEL")

      # HuggingFace Hub model loading - HIGH CONFIDENCE
      - pattern: SentenceTransformer.from_pretrained($MODEL)
      - pattern: model.save_pretrained($PATH)

      # Sentence-transformers specific operations - HIGH CONFIDENCE
      - pattern: model.similarity($TEXTS1, $TEXTS2)
      - pattern: $MODEL.encode($TEXTS, convert_to_tensor=$BOOL)
      - pattern: $MODEL.encode($TEXTS, show_progress_bar=$BOOL)

      # Cross-encoder patterns (HuggingFace) - HIGH CONFIDENCE
      - pattern: from sentence_transformers import CrossEncoder
      - pattern: CrossEncoder($MODEL)
      - pattern: $CROSS_ENCODER.predict($PAIRS)

      # HuggingFace embedding evaluation - MEDIUM CONFIDENCE
      - pattern: from sentence_transformers.evaluation import $EVAL
      - pattern: $MODEL.evaluate($EVALUATOR)

    metadata:
      references:
        - https://www.sbert.net/
        - https://huggingface.co/sentence-transformers
        - https://huggingface.co/docs/transformers/main_classes/model
      category: maintainability
      technology:
        - genAI
        - embeddings
        - vector-search
        - sentence-transformers
        - huggingface
        - transformers
      confidence: HIGH
      subcategory:
        - vector