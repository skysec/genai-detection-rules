rules:
  - id: detect-embeddings-llamaindex
    languages:
      - python
    severity: INFO
    message: "Detected LlamaIndex embeddings usage: Text embeddings, vector generation, or embedding model patterns"
    pattern-either:
      # Embedding imports
      - pattern: from llama_index.embeddings.openai import OpenAIEmbedding
      - pattern: from llama_index.embeddings import $EMBEDDINGS
      - pattern: from llama_index.core.embeddings import BaseEmbedding
      - pattern: from llama_index.embeddings.huggingface import HuggingFaceEmbedding
      # Settings configuration with embeddings
      - pattern: Settings.embed_model = OpenAIEmbedding()
      - pattern: Settings.embed_model = $EMBEDDING_MODEL
      - pattern: from llama_index.core import Settings
      # Embedding instantiation
      - pattern: $EMBEDDINGS = OpenAIEmbedding()
      - pattern: embed_model = OpenAIEmbedding(...)
      - pattern: $VAR = HuggingFaceEmbedding(...)
      # Explicit embedding model usage - VERY HIGH CONFIDENCE
      - pattern: embed_model.get_text_embedding($TEXT)
      - pattern: $EMBED_MODEL.get_text_embedding($TEXT)
      - pattern: embed_model.get_query_embedding($QUERY)
      - pattern: $EMBED_MODEL.get_query_embedding($QUERY)

      # Vector index creation with embeddings - HIGH CONFIDENCE
      - pattern: from llama_index.core import VectorStoreIndex
      - pattern: VectorStoreIndex.from_documents($DOCS, embed_model=$EMBED_MODEL)
      - pattern: VectorStoreIndex.from_documents($DOCS, service_context=$CONTEXT)

      # Storage context with vector store and embeddings - HIGH CONFIDENCE
      - pattern: from llama_index.core.storage.storage_context import StorageContext
      - pattern: StorageContext.from_defaults(vector_store=$STORE)
      - pattern: VectorStoreIndex.from_documents($DOCS, storage_context=$CONTEXT)

      # Vector store with embeddings - HIGH CONFIDENCE
      - pattern: from llama_index.vector_stores.chroma import ChromaVectorStore
      - pattern: from llama_index.vector_stores.pinecone import PineconeVectorStore
      - pattern: vector_store = ChromaVectorStore(chroma_collection=$COLLECTION)
      - pattern: $STORE = PineconeVectorStore(pinecone_index=$INDEX)
    metadata:
      references:
        - https://docs.llamaindex.ai/en/stable/module_guides/models/embeddings/
        - https://docs.llamaindex.ai/en/stable/examples/embeddings/
      category: maintainability
      technology:
        - genAI
        - LLMs
        - embeddings
        - vector-search
        - text-embeddings
      confidence: HIGH
      subcategory:
        - embeddings